package pokerPackage;
import java.util.*;

public class Combinations {

	/**
	 * @param args
	 */
	public static void main(String[] args) {
		
		int size = 48; //size of counting
		Vector<Integer> v = new Vector<Integer>();
		int[] cards = new int[5];
		for(int x = 1;x<=size;x++)v.add(x);
		int count = 0;
		double start = System.currentTimeMillis();
		while(v.size()>=5){
			int a = v.remove(0);
			cards[0]=a;
			//for(int a = 0; a<(v.size()-3);a++){
			for(int b = 0;b<=(v.size()-4);b++){
				cards[1]= v.get(b);
				for(int c = b+1; c<=(v.size()-3);c++){
					cards[2] = v.get(c);
					for(int d = c+1; d<=(v.size()-2);d++){
						cards[3] = v.get(d);
						for(int e = d+1; e<=(v.size()-1);e++){
//							Vector<Integer> cards = new Vector<Integer>();
							cards[4] = v.get(e);
//							cards.add(a);
//							cards.add(v.get(d));
//							cards.add(v.get(b));
//							cards.add(v.get(c));
							
							//System.out.println(a+", "+v.get(b)+", "+v.get(c)+", "+v.get(d)+","+v.get(e));
							count++;
							Vector<Integer> cardsClone = new Vector(Arrays.asList(cards.clone()));
							Hand h = new Hand(cardsClone);
//							h.ID1 = (Vector<Integer>) cards.clone();
							h.calculateHand();
							//h.printHand();
//							cards.remove(cards.indexOf(v.get(e)));
						}
//						cards.remove(cards.indexOf(v.get(d)));
						
						
					}
//					cards.remove(cards.indexOf(v.get(c)));
					//System.out.println(a+", "+v.get(b)+", "+v.get(c));
					//System.out.println(v.get(a)+", "+v.get(b)+", "+v.get(c));
					
				}
//				cards.remove(cards.indexOf(v.get(b)));
			}
//			cards.remove(cards.indexOf(a));
		}
		double finish = System.currentTimeMillis();

		System.out.println("Count = "+count+" Time taken= "+((finish-start)/1000)+" sec");
	}

}
