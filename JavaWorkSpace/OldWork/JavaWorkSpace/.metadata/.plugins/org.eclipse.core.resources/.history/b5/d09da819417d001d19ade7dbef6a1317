import java.util.*;

public class TicTacToe {
	static int[] wins = new int[3];
	public static void main(String[] args){
for(int a = 0; a<9; a++){

			LinkedList<Integer> aList = getList(a,10,10,10,10,10,10,10,10);

			int [] aBoard = {0,0,0,0,0,0,0,0,0};
			aBoard[a] = 1;
			System.out.println("a = "+a);
			while(!aList.isEmpty()){
				int b=aList.remove();
				LinkedList<Integer> bList = getList(a,b,10,10,10,10,10,10,10);
				int[] bBoard = aBoard;
				bBoard[b]=2;

				System.out.println("b = "+b);
				while(!bList.isEmpty()){
					int c = bList.remove();
					LinkedList<Integer> cList = getList(a,b,c,10,10,10,10,10,10);
					int[] cBoard = bBoard;
					cBoard[c]=1;
					System.out.println("c = "+c);
					while(!cList.isEmpty()){
						int d = cList.remove();
						LinkedList<Integer> dList = getList(a,b,c,d,10,10,10,10,10);
						int[] dBoard = cBoard;
						dBoard[d]= 2;
						System.out.println("d = "+d);

						while(!dList.isEmpty()&&!isWin(dBoard)){
							int e = dList.remove();
							LinkedList<Integer> eList = getList(a,b,c,d,e,10,10,10,10);
							int[] eBoard = dBoard;
							eBoard[e]=1;
							System.out.println("e = "+e);
							while(!eList.isEmpty()&&!isWin(eBoard)){
								int f = eList.remove();
								LinkedList<Integer> fList = getList(a,b,c,d,e,f,10,10,10);
								int[] fBoard = eBoard;
								fBoard[f]=2;
								System.out.println("f = "+f);
								while(!fList.isEmpty()&&!isWin(fBoard)){
									int g = fList.remove();
									LinkedList<Integer> gList = getList(a,b,c,d,e,f,g,10,10);
									int[] gBoard = fBoard;
									gBoard[f]=1;
									isWin(gBoard);
									System.out.println("g = "+g);

								}
							}

						}
					}



				}

			}
		}
		System.out.println("x wins: "+wins[1]+" O wins: "+wins[2]+"test "+wins[0]);
	}

	public static LinkedList getList(int a, int b, int c, int d, int e, int f, int g, int h, int i){
		LinkedList<Integer> temp = new LinkedList<Integer>();
		for(int x= 0; x<9; x++){
			temp.add(x);
		}
		if(a!=10)temp.remove(temp.indexOf(a));
		if(b!=10)temp.remove(temp.indexOf(b));
		if(c!=10)temp.remove(temp.indexOf(c));
		if(d!=10)temp.remove(temp.indexOf(d));
		if(e!=10)temp.remove(temp.indexOf(e));
		if(f!=10)temp.remove(temp.indexOf(f));
		if(g!=10)temp.remove(temp.indexOf(g));
		if(h!=10)temp.remove(temp.indexOf(h));
		if(i!=10)temp.remove(temp.indexOf(i));





		return temp;

	}
	public static boolean isWin(int a[]){
		if(((a[0]==a[3])&&(a[3]==a[6]))&&a[0]!=0){
			wins[a[0]]++;

			printWin(a); return true;
		}
		if(((a[1]==a[4])&&(a[4]==a[7]))&&a[1]!=0){
			wins[a[1]]++;
			printWin(a); return true;
		}
		if((a[2]==a[5])&&(a[5]==a[8])&&a[2]!=0){
			wins[a[2]]++;
			printWin(a); return true;
		}
		if(((a[0]==a[1])&&(a[1]==a[2]))&&a[0]!=0){
			wins[a[0]]++;
			printWin(a); return true;
		}
		if(((a[3]==a[4])&&(a[4]==a[5]))&&a[3]!=0){
			wins[a[3]]++;
			printWin(a); return true;
		}
		if(((a[6]==a[7])&&(a[7]==a[8]))&&a[6]!=0){
			wins[a[6]]++;
			printWin(a); return true;
		}
		if(((a[0]==a[4])&&(a[4]==a[8]))&&a[0]!=0){
			wins[a[0]]++;
			printWin(a); return true;
		}
		if(((a[2]==a[4])&&(a[4]==a[6]))&&a[2]!=0){
			wins[a[2]]++;
			printWin(a); return true;
		}
		return false;






	}
	public static void printWin(int a[]){
		System.out.print("Win! : ");
		for(int x=0; x<9; x++){
			System.out.print(x+" = "+a[x]+",");
		}
		System.out.println("");
	}
}
