//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.235
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50826.0
// 
namespace FriendsService.FriendsFlockWebService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://friendsflock.org/", ConfigurationName="FriendsFlockWebService.AnalyticsSoap")]
    public interface AnalyticsSoap {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://friendsflock.org/UpdateAnalytic", ReplyAction="*")]
        System.IAsyncResult BeginUpdateAnalytic(FriendsService.FriendsFlockWebService.UpdateAnalyticRequest request, System.AsyncCallback callback, object asyncState);
        
        FriendsService.FriendsFlockWebService.UpdateAnalyticResponse EndUpdateAnalytic(System.IAsyncResult result);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UpdateAnalyticRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="UpdateAnalytic", Namespace="http://friendsflock.org/", Order=0)]
        public FriendsService.FriendsFlockWebService.UpdateAnalyticRequestBody Body;
        
        public UpdateAnalyticRequest() {
        }
        
        public UpdateAnalyticRequest(FriendsService.FriendsFlockWebService.UpdateAnalyticRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://friendsflock.org/")]
    public partial class UpdateAnalyticRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string sessionID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string columnName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string metric;
        
        public UpdateAnalyticRequestBody() {
        }
        
        public UpdateAnalyticRequestBody(string sessionID, string columnName, string metric) {
            this.sessionID = sessionID;
            this.columnName = columnName;
            this.metric = metric;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UpdateAnalyticResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="UpdateAnalyticResponse", Namespace="http://friendsflock.org/", Order=0)]
        public FriendsService.FriendsFlockWebService.UpdateAnalyticResponseBody Body;
        
        public UpdateAnalyticResponse() {
        }
        
        public UpdateAnalyticResponse(FriendsService.FriendsFlockWebService.UpdateAnalyticResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://friendsflock.org/")]
    public partial class UpdateAnalyticResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool UpdateAnalyticResult;
        
        public UpdateAnalyticResponseBody() {
        }
        
        public UpdateAnalyticResponseBody(bool UpdateAnalyticResult) {
            this.UpdateAnalyticResult = UpdateAnalyticResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface AnalyticsSoapChannel : FriendsService.FriendsFlockWebService.AnalyticsSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateAnalyticCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateAnalyticCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AnalyticsSoapClient : System.ServiceModel.ClientBase<FriendsService.FriendsFlockWebService.AnalyticsSoap>, FriendsService.FriendsFlockWebService.AnalyticsSoap {
        
        private BeginOperationDelegate onBeginUpdateAnalyticDelegate;
        
        private EndOperationDelegate onEndUpdateAnalyticDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateAnalyticCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public AnalyticsSoapClient() {
        }
        
        public AnalyticsSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AnalyticsSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AnalyticsSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AnalyticsSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<UpdateAnalyticCompletedEventArgs> UpdateAnalyticCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult FriendsService.FriendsFlockWebService.AnalyticsSoap.BeginUpdateAnalytic(FriendsService.FriendsFlockWebService.UpdateAnalyticRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateAnalytic(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginUpdateAnalytic(string sessionID, string columnName, string metric, System.AsyncCallback callback, object asyncState) {
            FriendsService.FriendsFlockWebService.UpdateAnalyticRequest inValue = new FriendsService.FriendsFlockWebService.UpdateAnalyticRequest();
            inValue.Body = new FriendsService.FriendsFlockWebService.UpdateAnalyticRequestBody();
            inValue.Body.sessionID = sessionID;
            inValue.Body.columnName = columnName;
            inValue.Body.metric = metric;
            return ((FriendsService.FriendsFlockWebService.AnalyticsSoap)(this)).BeginUpdateAnalytic(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        FriendsService.FriendsFlockWebService.UpdateAnalyticResponse FriendsService.FriendsFlockWebService.AnalyticsSoap.EndUpdateAnalytic(System.IAsyncResult result) {
            return base.Channel.EndUpdateAnalytic(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private bool EndUpdateAnalytic(System.IAsyncResult result) {
            FriendsService.FriendsFlockWebService.UpdateAnalyticResponse retVal = ((FriendsService.FriendsFlockWebService.AnalyticsSoap)(this)).EndUpdateAnalytic(result);
            return retVal.Body.UpdateAnalyticResult;
        }
        
        private System.IAsyncResult OnBeginUpdateAnalytic(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sessionID = ((string)(inValues[0]));
            string columnName = ((string)(inValues[1]));
            string metric = ((string)(inValues[2]));
            return this.BeginUpdateAnalytic(sessionID, columnName, metric, callback, asyncState);
        }
        
        private object[] OnEndUpdateAnalytic(System.IAsyncResult result) {
            bool retVal = this.EndUpdateAnalytic(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateAnalyticCompleted(object state) {
            if ((this.UpdateAnalyticCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateAnalyticCompleted(this, new UpdateAnalyticCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateAnalyticAsync(string sessionID, string columnName, string metric) {
            this.UpdateAnalyticAsync(sessionID, columnName, metric, null);
        }
        
        public void UpdateAnalyticAsync(string sessionID, string columnName, string metric, object userState) {
            if ((this.onBeginUpdateAnalyticDelegate == null)) {
                this.onBeginUpdateAnalyticDelegate = new BeginOperationDelegate(this.OnBeginUpdateAnalytic);
            }
            if ((this.onEndUpdateAnalyticDelegate == null)) {
                this.onEndUpdateAnalyticDelegate = new EndOperationDelegate(this.OnEndUpdateAnalytic);
            }
            if ((this.onUpdateAnalyticCompletedDelegate == null)) {
                this.onUpdateAnalyticCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateAnalyticCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateAnalyticDelegate, new object[] {
                        sessionID,
                        columnName,
                        metric}, this.onEndUpdateAnalyticDelegate, this.onUpdateAnalyticCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override FriendsService.FriendsFlockWebService.AnalyticsSoap CreateChannel() {
            return new AnalyticsSoapClientChannel(this);
        }
        
        private class AnalyticsSoapClientChannel : ChannelBase<FriendsService.FriendsFlockWebService.AnalyticsSoap>, FriendsService.FriendsFlockWebService.AnalyticsSoap {
            
            public AnalyticsSoapClientChannel(System.ServiceModel.ClientBase<FriendsService.FriendsFlockWebService.AnalyticsSoap> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginUpdateAnalytic(FriendsService.FriendsFlockWebService.UpdateAnalyticRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("UpdateAnalytic", _args, callback, asyncState);
                return _result;
            }
            
            public FriendsService.FriendsFlockWebService.UpdateAnalyticResponse EndUpdateAnalytic(System.IAsyncResult result) {
                object[] _args = new object[0];
                FriendsService.FriendsFlockWebService.UpdateAnalyticResponse _result = ((FriendsService.FriendsFlockWebService.UpdateAnalyticResponse)(base.EndInvoke("UpdateAnalytic", _args, result)));
                return _result;
            }
        }
    }
}
